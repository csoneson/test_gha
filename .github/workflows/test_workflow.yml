on:
  push:

name: gha-run

jobs:
  gha-run:
    name: install snakemake
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        include:
        - os: macos-latest
          rversion: '4.2'
        - os: ubuntu-latest
          rversion: '4.2'
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      
      - name: Install Conda environment
        uses: mamba-org/provision-with-micromamba@main
        with:
          channels: bioconda,conda-forge,defaults
          extra-specs: snakemake=6.10.0
        
#      - name: Set up conda
#        uses: s-weigand/setup-conda@v1.1.1
#        with:
#          activate-conda: true
#          update-conda: true
#          conda-channels: 'bioconda,conda-forge,defaults'
#
#      - name: Install system dependencies (Linux)
#        if: runner.os == 'Linux'
#        run: |
#          sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable --yes 
#          sudo apt-get --yes --force-yes update -qq && \
#          sudo apt-get -y install libcairo2-dev libv8-dev \
#          libgdal-dev libgeos-dev libgeos++-dev libproj-dev libudunits2-dev \
#          libcurl4-openssl-dev libharfbuzz-dev libfribidi-dev libglpk-dev \
#          libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev libgit2-dev
#
#      - name: Install snakemake (Linux)
#        if: runner.os == 'Linux'
#        run: |
#          #conda install -c conda-forge mamba=0.23.3
#          #rm -f /usr/share/miniconda/pkgs/cache/*.json # workaround from mamba-org/mamba#488
#          #mamba install -c bioconda snakemake=6.10.0
#          conda install -c bioconda snakemake=6.10.0
#
#      - name: Install snakemake (macOS)
#        if: runner.os == 'macOS'
#        run: |
#          #conda install -c conda-forge mamba=0.23.3
#          #mamba install -c bioconda snakemake=6.10.0
#          conda install -c bioconda snakemake=6.10.0
      
